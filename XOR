#include "XOR.h"

char XOR(char message, char key){
  //xor sur les codes UTF8 des caractères du message
       if (message==key) return '~';
       else if(message=='~' || message==127 || message==23) return key;
       else return message^key;
}


char * XOR_crypt(char* f_in, char* f_out, char* key ){
  //Initialisation
  FILE* f_Read = fopen(f_in, "r"); FILE* f_Write = fopen(f_out, "w");
  char message[MAX_LENGHT], *cryptage=NULL; int i=0;
  //Récupération du message à chiffrer et gestion de la taille du message et de la clé
  while((message[i]=fgetc(f_Read))!=EOF)
        i++;
  message[i]='\0';
  int l_message=strlen(message), l_key = size_key(message,key);
  cryptage = malloc(sizeof(char*)*l_message);
  for(int k=0; k<l_message;k++)
         cryptage[k]=XOR(message[k],key[k%l_key]);
  cryptage[l_message]='\0';
  fputs(cryptage,f_Write); //Ecriture du cryptage dans le fichier passé en paramètres
  fclose(f_Read); fclose(f_Write);//On ferme les fichiers
  return cryptage;
}
